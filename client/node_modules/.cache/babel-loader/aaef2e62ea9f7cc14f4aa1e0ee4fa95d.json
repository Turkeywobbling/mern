{"ast":null,"code":"import _regeneratorRuntime from\"D:/vs-workspace/mern/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"D:/vs-workspace/mern/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import _objectSpread from\"D:/vs-workspace/mern/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import _slicedToArray from\"D:/vs-workspace/mern/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState}from\"react\";import{useNavigate}from\"react-router\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";export default function Create(){var _useState=useState({name:\"\",intro:\"\"}),_useState2=_slicedToArray(_useState,2),form=_useState2[0],setForm=_useState2[1];var navigate=useNavigate();// These methods will update the state properties.\nfunction updateForm(value){return setForm(function(prev){return _objectSpread(_objectSpread({},prev),value);});}// This function will handle the submission.\nfunction onSubmit(_x){return _onSubmit.apply(this,arguments);}// This following section will display the form that takes the input from the user.\nfunction _onSubmit(){_onSubmit=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(e){var newPerson;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:e.preventDefault();// When a post request is sent to the create url, we'll add a new record to the database.\nnewPerson=_objectSpread({},form);_context.next=4;return fetch(\"http://localhost:5000/record/add\",{method:\"POST\",headers:{\"Content-Type\":\"application/json\"},body:JSON.stringify(newPerson)}).catch(function(error){window.alert(error);return;});case 4:setForm({name:\"\",intro:\"\"});navigate(\"/\");case 6:case\"end\":return _context.stop();}}},_callee);}));return _onSubmit.apply(this,arguments);}return/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"h3\",{children:\"Create New Record\"}),/*#__PURE__*/_jsxs(\"form\",{onSubmit:onSubmit,children:[/*#__PURE__*/_jsxs(\"div\",{className:\"form-group\",children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:\"name\",children:\"name\"}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",className:\"form-control\",id:\"name\",value:form.name,onChange:function onChange(e){return updateForm({name:e.target.value});}})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"form-group\",children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:\"intro\",children:\"intro\"}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",className:\"form-control\",id:\"intro\",value:form.intro,onChange:function onChange(e){return updateForm({intro:e.target.value});}})]}),/*#__PURE__*/_jsx(\"div\",{className:\"form-group\",children:/*#__PURE__*/_jsx(\"input\",{type:\"submit\",value:\"Create person\",className:\"btn btn-primary\"})})]})]});}","map":{"version":3,"sources":["D:/vs-workspace/mern/client/src/components/create.js"],"names":["React","useState","useNavigate","Create","name","intro","form","setForm","navigate","updateForm","value","prev","onSubmit","e","preventDefault","newPerson","fetch","method","headers","body","JSON","stringify","catch","error","window","alert","target"],"mappings":"okBAAA,MAAOA,CAAAA,KAAP,EAAgBC,QAAhB,KAAgC,OAAhC,CACA,OAASC,WAAT,KAA4B,cAA5B,C,wFAEA,cAAe,SAASC,CAAAA,MAAT,EAAkB,CAC/B,cAAwBF,QAAQ,CAAC,CAC/BG,IAAI,CAAE,EADyB,CAE/BC,KAAK,CAAE,EAFwB,CAAD,CAAhC,wCAAOC,IAAP,eAAaC,OAAb,eAIA,GAAMC,CAAAA,QAAQ,CAAGN,WAAW,EAA5B,CAEA;AACA,QAASO,CAAAA,UAAT,CAAoBC,KAApB,CAA2B,CACzB,MAAOH,CAAAA,OAAO,CAAC,SAACI,IAAD,CAAU,CACvB,sCAAYA,IAAZ,EAAqBD,KAArB,EACD,CAFa,CAAd,CAGD,CAED;AAd+B,QAehBE,CAAAA,QAfgB,6CAqC/B;AArC+B,uFAe/B,iBAAwBC,CAAxB,gIACEA,CAAC,CAACC,cAAF,GAEA;AACMC,SAJR,kBAIyBT,IAJzB,wBAMQU,CAAAA,KAAK,CAAC,kCAAD,CAAqC,CAC9CC,MAAM,CAAE,MADsC,CAE9CC,OAAO,CAAE,CACP,eAAgB,kBADT,CAFqC,CAK9CC,IAAI,CAAEC,IAAI,CAACC,SAAL,CAAeN,SAAf,CALwC,CAArC,CAAL,CAOLO,KAPK,CAOC,SAAAC,KAAK,CAAI,CACdC,MAAM,CAACC,KAAP,CAAaF,KAAb,EACA,OACD,CAVK,CANR,QAkBEhB,OAAO,CAAC,CAAEH,IAAI,CAAE,EAAR,CAAYC,KAAK,CAAE,EAAnB,CAAD,CAAP,CACAG,QAAQ,CAAC,GAAD,CAAR,CAnBF,sDAf+B,2CAsC/B,mBACE,oCACE,yCADF,cAEE,cAAM,QAAQ,CAAEI,QAAhB,wBACE,aAAK,SAAS,CAAC,YAAf,wBACE,cAAO,OAAO,CAAC,MAAf,kBADF,cAEE,cACE,IAAI,CAAC,MADP,CAEE,SAAS,CAAC,cAFZ,CAGE,EAAE,CAAC,MAHL,CAIE,KAAK,CAAEN,IAAI,CAACF,IAJd,CAKE,QAAQ,CAAE,kBAACS,CAAD,QAAOJ,CAAAA,UAAU,CAAC,CAAEL,IAAI,CAAES,CAAC,CAACa,MAAF,CAAShB,KAAjB,CAAD,CAAjB,EALZ,EAFF,GADF,cAWE,aAAK,SAAS,CAAC,YAAf,wBACE,cAAO,OAAO,CAAC,OAAf,mBADF,cAEE,cACE,IAAI,CAAC,MADP,CAEE,SAAS,CAAC,cAFZ,CAGE,EAAE,CAAC,OAHL,CAIE,KAAK,CAAEJ,IAAI,CAACD,KAJd,CAKE,QAAQ,CAAE,kBAACQ,CAAD,QAAOJ,CAAAA,UAAU,CAAC,CAAEJ,KAAK,CAAEQ,CAAC,CAACa,MAAF,CAAShB,KAAlB,CAAD,CAAjB,EALZ,EAFF,GAXF,cAqBE,YAAK,SAAS,CAAC,YAAf,uBACE,cACE,IAAI,CAAC,QADP,CAEE,KAAK,CAAC,eAFR,CAGE,SAAS,CAAC,iBAHZ,EADF,EArBF,GAFF,GADF,CAkCD","sourcesContent":["import React, { useState } from \"react\";\nimport { useNavigate } from \"react-router\";\n\nexport default function Create() {\n  const [form, setForm] = useState({\n    name: \"\",\n    intro: \"\",\n  });\n  const navigate = useNavigate();\n\n  // These methods will update the state properties.\n  function updateForm(value) {\n    return setForm((prev) => {\n      return { ...prev, ...value };\n    });\n  }\n\n  // This function will handle the submission.\n  async function onSubmit(e) {\n    e.preventDefault();\n\n    // When a post request is sent to the create url, we'll add a new record to the database.\n    const newPerson = { ...form };\n\n    await fetch(\"http://localhost:5000/record/add\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify(newPerson),\n    })\n    .catch(error => {\n      window.alert(error);\n      return;\n    });\n\n    setForm({ name: \"\", intro: \"\"});\n    navigate(\"/\");\n  }\n\n  // This following section will display the form that takes the input from the user.\n  return (\n    <div>\n      <h3>Create New Record</h3>\n      <form onSubmit={onSubmit}>\n        <div className=\"form-group\">\n          <label htmlFor=\"name\">name</label>\n          <input\n            type=\"text\"\n            className=\"form-control\"\n            id=\"name\"\n            value={form.name}\n            onChange={(e) => updateForm({ name: e.target.value })}\n          />\n        </div>\n        <div className=\"form-group\">\n          <label htmlFor=\"intro\">intro</label>\n          <input\n            type=\"text\"\n            className=\"form-control\"\n            id=\"intro\"\n            value={form.intro}\n            onChange={(e) => updateForm({ intro: e.target.value })}\n          />\n        </div>\n        <div className=\"form-group\">\n          <input\n            type=\"submit\"\n            value=\"Create person\"\n            className=\"btn btn-primary\"\n          />\n        </div>\n      </form>\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}